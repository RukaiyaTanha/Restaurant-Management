<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>